{smcl}
{txt}{...}
{pstd}{c TLC}{hline 43}{c TRC}{break}
{bf}{...}
{c |}{view `""New Hampshire 2013 Advanced.smcl""': Innovations for Poverty Action{space 12}}{c |}{break}
{c |}{view `""New Hampshire 2013 Advanced.smcl""': The Abdul Latif Jameel Poverty Action Lab{space 1}}{c |}{break}
{c |}{view `""New Hampshire 2013 Advanced.smcl""':{space 43}}{c |}{break}
{c |}{view `""New Hampshire 2013 Advanced.smcl""': Staff Training - New Hampshire 2013{space 7}}{c |}{break}
{c |}{view `""New Hampshire 2013 Advanced.smcl""': Advanced Stata{space 28}}{c |}{break}
{sf}{...}
{c BLC}{hline 43}{c BRC}

{pstd}{bf:{bf:reshape}}{break}
{it:Answer key}{break}

{pstd}{view `""SMCL/Answers/reshape - answers.smcl"##q1"':Question 1}{break}
{view `""SMCL/Answers/reshape - answers.smcl"##q2"':Question 2}{break}

{hline}{marker q1}

{pstd}{bf:Answer to Question 1}

{hline}

{pstd}Suppose we have a subset of a dataset of 2011 IPA expense reports.
(Don't worry, the data is fake.)

{phang}{bf:{stata `"use "Raw/New Hampshire 2013 projects 1", clear"'}}{p_end}

{pstd}{it}{...} The dataset is sorted by employee ({cmd:id}) and the date of the ER ({cmd:date}):

{phang}{bf:{stata `"isid id date"'}}{p_end}
{phang}{bf:{stata `"browse"'}}{p_end}

{pstd}{it}{...} However, the projects variables are a mess.
They were taken directly from the ER,
so the values are ordered according to how they were entered in the ER.
{txt}{sf}{ul off}{...}

{pstd}{it}{...} {bf:(a)}

{pstd}Sort across the project variables,
so that {cmd:project1} is an employee's alphabetically first project,
{cmd:project2} the second, and so on.
(The project variables are numeric,
but the values of the value label are sorted by project text:
{bf:{stata label list project}})
{txt}{sf}{ul off}{...}

{phang}{bf:{stata `"reshape long project, i(id date)"'}}{p_end}

{phang}{bf:{stata `"drop _j"'}}{p_end}
{phang}{bf:{stata `"bysort id date (project): generate j = _n"'}}{p_end}
{phang}{bf:{stata `"reshape wide project, i(id date) j(j)"'}}{p_end}

{pstd}{it}{...} {bf:(b)}

{pstd}Create a variable named {cmd:projectchange} that is {cmd:1}
if an employee's list of projects changed since their last ER,
and {cmd:0} otherwise.
There are multiple approaches to {bf:(b)}!
{txt}{sf}{ul off}{...}

{pstd}Here's one approach:

{phang}{cmd}generate projectchange = 0{txt}{p_end}
{phang}{cmd}forvalues i = 1/6 {{txt}{p_end}
{phang2}{cmd}bysort id (date): replace projectchange = 1 ///{txt}{p_end}
{phang3}{cmd}if project`i' != project`i'[_n - 1] & _n > 1{txt}{p_end}
{phang}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Answers/reshape - answers.do" 1"':Click here to execute.}

{pstd}{it}{...} {bf:(c)}

{pstd}Create a variable named {cmd:anychange} that is {cmd:1}
if an employee made any project change in 2011,
and {cmd:0} otherwise. How many IPAers changed projects in 2011?
{txt}{sf}{ul off}{...}

{phang}{bf:{stata `"bysort id (projectchange): generate anychange = projectchange[_N]"'}}{p_end}

{phang}{bf:{stata `"tabulate id if anychange"'}}{p_end}

{hline}

















































{hline}{marker q2}

{pstd}{bf:Answer to Question 2}

{hline}

{pstd}{it}{...} For variables that are lists, such as {cmd:projects},
{cmd:reshape} allows manipulation beyond sorting.

{pstd}The following is a dataset of one variable, {cmd:s2_q8},
a question that allowed respondents to choose up to 4 of 12 possible options:

{phang}{bf:{stata `"use "Raw/New Hampshire 2013 s2_q8", clear"'}}{p_end}

{phang}{bf:{stata `"browse"'}}{p_end}

{pstd}{it}{...} You can see that {cmd:s2_q8} is already internally sorted.
However, it's still not possible to use the variable for analysis.

{pstd}Using {cmd:reshape}, create dummy variables for all 12 options.
For each value, if a list contains that value, the value's dummy variable should equal {cmd:1};
otherwise it should equal {cmd:0}. For example:

{phang}{bf:{stata `"list in 1"'}}{p_end}

{pstd}{it}{...} In observation 1, the dummy variable for option {cmd:1} would equal {cmd:0},
since the list does not contain {cmd:1}.
However, the dummy variable for option {cmd:5} would equal {cmd:1}.
{txt}{sf}{ul off}{...}

{phang}{bf:{stata `"split s2_q8, generate(response)"'}}{p_end}

{phang}{bf:{stata `"browse"'}}{p_end}

{phang}{bf:{stata `"reshape long response, i(id)"'}}{p_end}
{phang}{bf:{stata `"drop if missing(response)"'}}{p_end}

{phang}{bf:{stata `"browse"'}}{p_end}

{phang}{bf:{stata `"destring response, replace"'}}{p_end}

{phang}{bf:{stata `"xi i.response, noomit"'}}{p_end}
{phang}{bf:{stata `"renpfix _Iresponse s2_q8"'}}{p_end}

{phang}{bf:{stata `"browse"'}}{p_end}

{phang}{cmd}foreach var of varlist s2_q8_* {{txt}{p_end}
{phang2}{cmd}bysort id (`var'): replace `var' = `var'[_N]{txt}{p_end}
{phang}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Answers/reshape - answers.do" 2"':Click here to execute.}

{phang}{bf:{stata `"browse"'}}{p_end}

{phang}{cmd}forvalues i = 1/12 {{txt}{p_end}
{phang2}{cmd}capture generate s2_q8_`i' = 0{txt}{p_end}
{phang}{cmd}}{txt}{p_end}

{pstd}{stata `"run "Do/Answers/reshape - answers.do" 3"':Click here to execute.}

{phang}{bf:{stata `"browse"'}}{p_end}

{phang}{bf:{stata `"drop response _j"'}}{p_end}
{phang}{bf:{stata `"duplicates drop"'}}{p_end}

{phang}{bf:{stata `"browse"'}}{p_end}

