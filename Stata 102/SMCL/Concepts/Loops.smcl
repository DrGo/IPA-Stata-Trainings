{smcl}
{txt}{...}
{pstd}{c TLC}{hline 43}{c TRC}{break}
{bf}{...}
{c |}{view `""Post Kenya 2014 - Stata 102.smcl""': Innovations for Poverty Action{space 12}}{c |}{break}
{c |}{view `""Post Kenya 2014 - Stata 102.smcl""': The Abdul Latif Jameel Poverty Action Lab{space 1}}{c |}{break}
{c |}{view `""Post Kenya 2014 - Stata 102.smcl""':{space 43}}{c |}{break}
{c |}{view `""Post Kenya 2014 - Stata 102.smcl""': Staff Training - Kenya 2014 {space 14}}{c |}{break}
{c |}{view `""Post Kenya 2014 - Stata 102.smcl""': Stata 102{space 33}}{c |}{break}
{sf}{...}
{c BLC}{hline 43}{c BRC}

{pstd}{bf:Loops}{break}

{pstd}{bf:{stata `"use "Raw/Post Kenya 2014 - Stata 102", clear"'}}{p_end}

{pstd}Up until now, we have worked solely with variables in Stata.
A Stata dataset is simply a collection of variables, sets of values,
which can be manipulated and analyzed in a variety of ways. However,
when writing code, variables have a number of drawbacks. In this chapter,
we’ll introduce an essential Stata concept, that of the macro.
We’ll explore macros through one particular type, that of the local.

{pstd}What is a macro? A macro simply stores a single value, and if you need
to save a value for later, it's often more convenient to attach it to a
macro than to create an entire variable for it.{space 2}Macros also facilitate
more complex code in a way that variables don't -- we'll get to that.




{pstd}Loops




{hline}

{pstd}Next: {view `""SMCL/Tasks/Importing.smcl""':Importing}{break}
Previous: {view `""SMCL/Concepts/Macros and Locals.smcl""':Macros and Locals}{break}
{view `""Post Kenya 2014 - Stata 102.smcl""':Stata 102 Start}{break}
